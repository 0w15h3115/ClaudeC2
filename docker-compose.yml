version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: c2db
      POSTGRES_USER: c2user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-c2pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U c2user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # C2 Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-sqlite:///./c2_teamserver.db}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG:-false}
      DEFAULT_ADMIN_USERNAME: ${DEFAULT_ADMIN_USERNAME:-admin}
      DEFAULT_ADMIN_PASSWORD: ${DEFAULT_ADMIN_PASSWORD:-changeme123!}
    volumes:
      - ./uploads:/app/uploads
      - ./downloads:/app/downloads
      - ./payloads:/app/payloads
      - ./logs:/app/logs
      - ./certs:/app/certs
    ports:
      - "8000:8000"
    restart: unless-stopped

  # Web UI
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - server
    environment:
      REACT_APP_API_URL: ${API_URL:-http://localhost:8000}
      REACT_APP_WS_URL: ${WS_URL:-ws://localhost:8000}
    ports:
      - "3000:80"
    restart: unless-stopped

  # Nginx Redirector (optional)
  nginx:
    image: nginx:alpine
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - ./client/public:/usr/share/nginx/html:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    profiles:
      - redirector

volumes:
  postgres_data:
  redis_data:
